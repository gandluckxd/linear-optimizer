#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–∞–¥–µ–Ω–∏–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import sys
import traceback

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    
    try:
        print("  ‚úÖ –ò–º–ø–æ—Ä—Ç datetime...")
        from datetime import datetime
        
        print("  ‚úÖ –ò–º–ø–æ—Ä—Ç typing...")
        from typing import List, Dict, Optional
        
        print("  ‚úÖ –ò–º–ø–æ—Ä—Ç dataclasses...")
        from dataclasses import dataclass, field
        
        print("  ‚úÖ –ò–º–ø–æ—Ä—Ç core.models...")
        from core.models import Profile, Stock, CutPlan, OptimizationResult
        
        print("  ‚úÖ –ò–º–ø–æ—Ä—Ç core.optimizer...")
        from core.optimizer import SimpleOptimizer, OptimizationSettings
        
        print("‚úÖ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        traceback.print_exc()
        return False

def test_basic_optimization():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏...")
    
    try:
        from core.models import Profile, Stock
        from core.optimizer import SimpleOptimizer, OptimizationSettings
        
        print("  ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        # –ü—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        profiles = [
            Profile(id=1, order_id=1, element_name="–¢–µ—Å—Ç", profile_code="P001", length=1000, quantity=1)
        ]
        
        stocks = [
            Stock(id=1, profile_id=1, length=2000, quantity=1)
        ]
        
        print("  ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä–∞...")
        settings = OptimizationSettings(blade_width=5.0, min_remainder_length=300.0)
        optimizer = SimpleOptimizer(settings)
        
        print("  ‚úÖ –ó–∞–ø—É—Å–∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏...")
        result = optimizer.optimize(profiles, stocks)
        
        print(f"  ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: —É—Å–ø–µ—Ö={result.success}, –ø–ª–∞–Ω–æ–≤={len(result.cut_plans)}")
        
        if result.cut_plans:
            plan = result.cut_plans[0]
            print(f"  ‚úÖ –ü–ª–∞–Ω: —Ö–ª—ã—Å—Ç={plan.stock_length}–º–º, –æ—Ç—Ö–æ–¥—ã={plan.waste}–º–º")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã
            used_length = plan.get_used_length()
            total_pieces = plan.get_total_pieces_length()
            cuts_count = plan.get_cuts_count()
            is_valid = plan.validate()
            
            print(f"  ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ={used_length}–º–º, –∫—É—Å–∫–æ–≤={cuts_count}, –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ={is_valid}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: {e}")
        traceback.print_exc()
        return False

def test_gui_imports():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ GUI"""
    print("\nüñ•Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ GUI...")
    
    try:
        print("  ‚úÖ –ò–º–ø–æ—Ä—Ç PyQt5...")
        from PyQt5.QtWidgets import QApplication
        from PyQt5.QtCore import Qt
        
        print("  ‚úÖ –ò–º–ø–æ—Ä—Ç gui.table_widgets...")
        from gui.table_widgets import fill_optimization_results_table
        
        print("‚úÖ GUI –∏–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ GUI –∏–º–ø–æ—Ä—Ç–∞: {e}")
        traceback.print_exc()
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ª–∞–¥–∫–∏"""
    print("üîß –û–¢–õ–ê–î–û–ß–ù–´–ô –¢–ï–°–¢ LINEAR OPTIMIZER")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç—ã
    if not test_imports():
        print("\n‚ùå –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ –ø—Ä–æ–≤–∞–ª–µ–Ω!")
        return False
    
    # –¢–µ—Å—Ç 2: –ë–∞–∑–æ–≤–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
    if not test_basic_optimization():
        print("\n‚ùå –¢–µ—Å—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–≤–∞–ª–µ–Ω!")
        return False
    
    # –¢–µ—Å—Ç 3: GUI –∏–º–ø–æ—Ä—Ç—ã
    if not test_gui_imports():
        print("\n‚ö†Ô∏è –¢–µ—Å—Ç GUI –∏–º–ø–æ—Ä—Ç–æ–≤ –ø—Ä–æ–≤–∞–ª–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, PyQt5 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)")
    
    print("\nüéâ –í–°–ï –ë–ê–ó–û–í–´–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    print("–ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ GUI –∏–ª–∏ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.")
    
    return True

if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        print(f"\nüí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        traceback.print_exc()
        sys.exit(1)